# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
   # nginx 日志采集配置
   file {
        type => "nginx001"  #可以自行定义，方便后面判断，但是不要使用大写，否则报错
        path => "/usr/share/data/project_log/nginx/access.log"
        start_position => "created"  # 从日志其实位置采集
        stat_interval => "3"    # 采集频率为 3 秒
        #  下一行不要提前将原始数据转换为 json ，否则后面坑死你，不要相信 elk 之前版本的文档资料 
        # codec => json
   }
 
   # nginx 错误日志采集配置
   file {
        type => "nginxerr"  
        path => "/usr/share/data/project_log/nginx/error.log"
        start_position => ""
        stat_interval => "3"
        # plain 表示采集的数据是 文本格式，非 json 
        codec => plain
   }
 
  beats {
    port => 5044
  }
}



#数据过滤规则
filter {
       # 非 nginx 的 error log，都是 json 格式，那么在这里进行 json 格式化 
      if [type]  != "nginxerr"  {
            json{
                #每一条数据就是一个消息事件（message）
                source => "message"
            }
      }
    # 根据设置的类型动态设置 索引模式(index pattern )
	if [type] == "nginx001" {
       # 注意：索引模式 以 logstash- 开头，表示使用系统默认json解析模板，否则又要自己定义解析模板，此外，注意全程小写.  
	   mutate { add_field => { "[@metadata][target_index]" => "logstash-nginx001-%{+YYYY.MM.dd}" } }
	}else if [type] == "goskeleton" {
           mutate { add_field => { "[@metadata][target_index]" => "logstash-goskeleton-%{+YYYY.MM.dd}" } }
    }else if [type]=="nginxerr"{
	   mutate { add_field => { "[@metadata][target_index]" => "logstash-nginxerr-%{+YYYY.MM.dd}" } }
	}else {
	 mutate { add_field => { "[@metadata][target_index]" => "logstash-unknowindex-%{+YYYY.MM.dd}" } }
	}
      # 匹配 nginx 错误日志,将原始文本进行 json 化
   if [type]=="nginxerr" {      
      grok {
           match => [ "message" , "(?<created_at>%{YEAR}[./-]%{MONTHNUM2}[./-]%{MONTHDAY} %{TIME:time2}) \[%{WORD:errLevel}]  (?<errMsg>([\w\W])*), client\: %{IP:clientIp}(, server\: %{IPORHOST:server})?(, request\: \"%{DATA:request}\")?(, upstream\: \"%{DATA:upstream}\")?(, host\: \"%{DATA:host}\")?"  ]
        }	
   }
      #删除一些多余字段
    mutate {
         remove_field => [ "message","@version"]
    }
}





output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "%{[@metadata][target_index]}"
    #index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    #user => "elastic"
    #password => "changeme"
  }
}
